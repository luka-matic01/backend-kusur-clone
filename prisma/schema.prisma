generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url     = env("MYSQL_DATABASE_URL")
}

model User {
  id         Int         @id @default(autoincrement())
  phoneNumber   String       @unique
  firstName     String?
  lastName     String?
  relusertenant  RelUserTenant[]
}

model Wallet {
  id         Int         @id @default(autoincrement())
  pointBalance  Int
  tenant      Tenant?       @relation(fields: [tenantId], references: [id], name: "TenantWallet")
  tenantId     Int         @unique
}

model Tenant {
  id         Int         @id @default(autoincrement())
  name        String
  imageUrl     String
  vouchers     Voucher[]
  coupons      Coupon[]
  relusertenant RelUserTenant[]
  wallet      Wallet?       @relation("TenantWallet")
}

model Coupon {
  id         Int         @id @default(autoincrement())
  description   String
  name       String
  imageUrl     String
  currency     String
  discountValue  Int
  discountType  DiscountType?    @relation(fields: [discountTypeId], references: [id])
  discountTypeId Int?
  tenant     Tenant       @relation(fields: [tenantId], references: [id])
  tenantId     Int
}

model Voucher {
  id         Int         @id @default(autoincrement())
  description   String
  name       String
  imageUrl     String
  currency     String
  discountValue  Int
  discountType  DiscountType?    @relation(fields: [discountTypeId], references: [id])
  discountTypeId Int?
  tenant     Tenant       @relation(fields: [tenantId], references: [id])
  tenantId     Int
}

model DiscountType {
  id         Int         @id @default(autoincrement())
  name        String
  vouchers     Voucher[]
  coupons      Coupon[]
}

model RelUserTenant {
  id     Int   @id @default(autoincrement())
  user   User   @relation(fields: [userId], references: [id])
  userId Int
  tenant Tenant @relation(fields: [tenantId], references: [id])
  tenantId Int

  @@unique([userId, tenantId])
}
